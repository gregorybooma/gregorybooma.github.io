<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>booma.net</title><link href="http://booma.net/" rel="alternate"></link><link href="http://booma.net/feeds/all.atom.xml" rel="self"></link><id>http://booma.net/</id><updated>2017-10-22T00:00:00-04:00</updated><entry><title>From fork to stand-alone Github repo while keeping history</title><link href="http://booma.net/fork-to-stand-alone-github-repo-while-keeping-history.html" rel="alternate"></link><published>2017-10-22T00:00:00-04:00</published><updated>2017-10-22T00:00:00-04:00</updated><author><name>Gregory Booma</name></author><id>tag:booma.net,2017-10-22:/fork-to-stand-alone-github-repo-while-keeping-history.html</id><summary type="html">&lt;p&gt;It seems like a person should simply be able to &amp;#8220;unfork&amp;#8221; their repo when they no longer want it to be a fork. GitHub doesn&amp;#8217;t offer such a command, but there is a way. This will drop the &amp;#8220;forked from&amp;#8221; attribution (and wikis, etc.) from the repo, but it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It seems like a person should simply be able to &amp;#8220;unfork&amp;#8221; their repo when they no longer want it to be a fork. GitHub doesn&amp;#8217;t offer such a command, but there is a way. This will drop the &amp;#8220;forked from&amp;#8221; attribution (and wikis, etc.) from the repo, but it keeps the commit&amp;nbsp;history.&lt;/p&gt;
&lt;p&gt;1) Make a bare clone of the forked&amp;nbsp;repo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone --bare git@github.com:gregorybooma/osq.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2) Create a new empty repo on GitHub with no extras such as readme, license,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;3) cd to the directory of the bare clone, and mirror push to the newly-created repo (the directory will have &amp;#8220;.git&amp;#8221; as the end of its name &amp;#8212; don&amp;#8217;t confuse for a&amp;nbsp;file)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd osq.git
git push --mirror git@github.com:gregorybooma/mitsg-osq.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4) cd out of the bare clone&amp;#8217;s directory to the desired local location for the new repo, and clone it&amp;nbsp;there&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ..
git clone git@github.com:gregorybooma/mitsg-osq.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5) Delete the local and GitHub versions of the originally-forked&amp;nbsp;repo&lt;/p&gt;</content><category term="repositories"></category><category term="forks"></category><category term="forked-from"></category><category term="clone"></category><category term="mirror"></category><category term="mirror-push"></category></entry><entry><title>First Post Using Pelican</title><link href="http://booma.net/up-and-running-with-pelican.html" rel="alternate"></link><published>2017-09-13T00:00:00-04:00</published><updated>2017-09-13T00:00:00-04:00</updated><author><name>Gregory Booma</name></author><id>tag:booma.net,2017-09-13:/up-and-running-with-pelican.html</id><summary type="html">&lt;p&gt;After some toil I have Pelican installed and set-up to publish via GitHub pages. I decided to go with the &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3"&gt;pelican-bootstrap3 theme&lt;/a&gt;. Configuring Pelican was a bit of a pain, resulting in my eschewing a fabfile altogether and altering the github section of the Makefile as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;span class="c"&gt;#   cd …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;After some toil I have Pelican installed and set-up to publish via GitHub pages. I decided to go with the &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/pelican-bootstrap3"&gt;pelican-bootstrap3 theme&lt;/a&gt;. Configuring Pelican was a bit of a pain, resulting in my eschewing a fabfile altogether and altering the github section of the Makefile as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;span class="c"&gt;#   cd $(OUTPUTDIR) &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; ghp-import -m &amp;quot;publish site (make github)&amp;quot; -b $(GITHUB_PAGES_BRANCH) $(OUTPUTDIR) -p&lt;/span&gt;
    git -C &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; add --all
    git -C &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; commit -v -a -m &lt;span class="s1"&gt;&amp;#39;Pelican :: make github&amp;#39;&lt;/span&gt;
    git -C &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt; push -v -u origin &lt;span class="k"&gt;$(&lt;/span&gt;GITHUB_PAGES_BRANCH&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Posts are published by putting source markdown (or other accepted format) in the &amp;#8216;articles&amp;#8217; directory and running the following commands in a terminal (must be in top level directory of&amp;nbsp;site):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make publish
make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This generates an html file of the post in the &amp;#8216;output&amp;#8217; directory, and publishes to GitHub Pages. Edits are committed by adding a &amp;#8216;modified&amp;#8217; line in markdown, then&amp;nbsp;running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make regenerate
make publish
make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A lot more customization/automation is possible; but for now I have a nice, straightforward website with&amp;nbsp;blog.&lt;/p&gt;</content><category term="makefile"></category><category term="pelicanconf"></category><category term="github-pages"></category></entry></feed>